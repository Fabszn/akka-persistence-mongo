akka {
  contrib {
    persistence {
      mongodb {
	    mongo {
	      urls = [ "localhost:27017" ]
	      db = "akka-persistence"
	      journal-collection = "akka-persistence-journal"
	      journal-index = "akka-persistence-journal-index"
	      snaps-collection = "akka-persistsence-snaps"
	      snaps-index = "akka-persistence-snaps-index"
	
	      breaker {
	        maxTries = 5
	        timeout {
	          call = 5s
	          reset = 5s
	        }
	      }
	    }
	  }
    }
  }
}

akka-contrib-persistence-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "thread-pool-executor"
  # Configuration for the thread pool
  thread-pool-executor {
    # minimum number of threads to cap factor-based core number to
    core-pool-size-min = 2
    # No of core threads ... ceil(available processors * factor)
    core-pool-size-factor = 2.0
    # maximum number of threads to cap factor-based number to
    core-pool-size-max = 10
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 100
}

akka.persistence.journal.plugin = "akka-contrib-mongodb-persistence-journal"

akka-contrib-mongodb-persistence-journal {
  # Class name of the plugin.
  class = "akka.contrib.persistence.mongodb.MongoJournal"
  # Dispatcher for the plugin actor.
  plugin-dispatcher = "akka-contrib-persistence-dispatcher"
}

akka.persistence.snapshot.plugin = "akka-contrib-mongodb-persistence-snapshot"

akka-contrib-mongodb-persistence-snapshot {
  # Class name of the plugin.
  class = "akka.contrib.persistence.mongodb.MongoSnapshots"
  # Dispatcher for the plugin actor.
  plugin-dispatcher = "akka-contrib-persistence-dispatcher"
}